basePath: /api/v1
definitions:
  api.Autocomplete:
    properties:
      id:
        type: string
      image:
        type: string
      title:
        type: string
    type: object
  api.Comment:
    properties:
      date:
        type: string
      description:
        type: string
      int:
        type: integer
      name:
        type: string
      response:
        type: string
      title:
        type: string
    type: object
  api.Feature:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  api.Levels:
    properties:
      category:
        items:
          type: string
        type: array
      subcategory:
        items:
          type: string
        type: array
      subsubcategory:
        items:
          type: string
        type: array
    type: object
  api.Metadata:
    properties:
      equipment:
        items:
          type: string
        type: array
      features:
        items:
          $ref: '#/definitions/api.Feature'
        type: array
      specs:
        items:
          $ref: '#/definitions/api.Spec'
        type: array
      stocks:
        items:
          $ref: '#/definitions/api.Stock'
        type: array
    type: object
  api.Paragraph:
    properties:
      content:
        description: Required
        type: string
      header:
        description: Optional
        type: string
      images:
        description: Optional
        items:
          type: string
        type: array
      position:
        description: Image position regarding the text. (Top, Left, Right, Bottom)
        type: string
    type: object
  api.Post:
    properties:
      author:
        description: Optional
        type: string
      available:
        description: Required (whether it currently is shown or not)
        type: boolean
      comments:
        description: Optional, by default null
        items:
          $ref: '#/definitions/api.Comment'
        type: array
      date:
        description: Required
        type: string
      description:
        description: Required
        type: string
      id:
        description: Required
        type: string
      images:
        description: Required
        items:
          type: string
        type: array
      label:
        description: Required
        items:
          type: string
        type: array
      paragraph:
        description: Optional, by default null
        items:
          $ref: '#/definitions/api.Paragraph'
        type: array
      rating:
        description: Optional, by default null
        items:
          type: integer
        type: array
      social:
        $ref: '#/definitions/api.Social'
        description: Optional
      title:
        description: Required
        type: string
    type: object
  api.Product:
    properties:
      available:
        description: Required Facetable
        type: boolean
      brand:
        description: Optional, by default "" Facetable
        type: string
      comments:
        description: Optional, by default null
        items:
          $ref: '#/definitions/api.Comment'
        type: array
      date:
        description: Optional
        type: string
      description:
        description: Required
        type: string
      discount:
        description: Optional, by default 0
        type: integer
      final_price:
        description: Optional
        type: integer
      gender:
        description: Optional, by default "" Facetable
        type: string
      id:
        description: Required
        type: string
      images:
        description: Required
        items:
          type: string
        type: array
      levels:
        $ref: '#/definitions/api.Levels'
        description: Optional, by default "" Facetable
      metadata:
        $ref: '#/definitions/api.Metadata'
      mini_description:
        description: Optional
        type: string
      price:
        description: Optional Facetable range | Sortable
        type: integer
      rating:
        description: Optional, by default null
        items:
          type: integer
        type: array
      ship_price:
        description: Optional, by default 0
        type: integer
      title:
        description: Required Sortable | Relevance
        type: string
      url:
        type: string
    type: object
  api.Social:
    properties:
      facebook:
        description: Optional
        type: string
      instagram:
        description: Optional
        type: string
      linkedin:
        description: Optional
        type: string
    type: object
  api.Spec:
    properties:
      measure:
        type: string
      spec:
        type: string
      value:
        type: string
    type: object
  api.Stock:
    properties:
      color:
        description: Facetable
        type: string
      sizes:
        description: Facetable
        items:
          type: string
        type: array
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
host: store-api.alchersan.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Store OS API
  version: "1.0"
paths:
  /{client}/autocomplete:
    get:
      consumes:
      - application/json
      description: get autocomplete
      parameters:
      - description: client
        in: path
        name: client
        required: true
        type: string
      - description: name search by q
        format: q
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Autocomplete'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: List autocomplete
      tags:
      - autocomplete
  /{client}/blog:
    get:
      consumes:
      - application/json
      description: List posts
      parameters:
      - description: client
        in: path
        name: client
        required: true
        type: string
      - description: paging number
        format: page=1
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Blog endpoint
      tags:
      - posts
  /{client}/blog/{id}:
    get:
      consumes:
      - application/json
      description: get post by ID
      parameters:
      - description: client
        in: path
        name: client
        required: true
        type: string
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Blog endpoint
      tags:
      - post
  /{client}/products:
    get:
      consumes:
      - application/json
      description: List products
      parameters:
      - description: client
        in: path
        name: client
        required: true
        type: string
      - description: name search by q
        format: q
        in: query
        name: q
        type: string
      - description: paging number
        format: page=1
        in: query
        name: page
        type: string
      - description: category filter
        format: category=
        in: query
        name: category
        type: string
      - description: subcategory filter
        format: subcategory=
        in: query
        name: subcategory
        type: string
      - description: subsubcategory filter
        format: subsubcategory=
        in: query
        name: subsubcategory
        type: string
      - description: from price
        format: from
        in: query
        name: from
        type: integer
      - description: to price
        format: to
        in: query
        name: to
        type: integer
      - description: page number
        format: page
        in: query
        name: page
        type: integer
      - description: fieldsort final_price or title.keyword
        format: fieldsort
        in: query
        name: fieldsort
        type: string
      - description: order (asc or desc)
        format: order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Products endpoint
      tags:
      - products
  /{client}/products/{id}:
    get:
      consumes:
      - application/json
      description: get product by ID
      parameters:
      - description: client
        in: path
        name: client
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Products endpoint
      tags:
      - products
schemes:
- https
swagger: "2.0"
